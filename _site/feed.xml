<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Carlos Spitzer's Blog</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2015-03-08T20:29:45+01:00</updated>
<id>/</id>
<author>
  <name>Carlos Spitzer</name>
  <uri>/</uri>
  <email>me@carlos-spitzer.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Improving log-analysis capabilities with logstash + elasticsearch + kibana]]></title>
  <link rel="alternate" type="text/html" href="/elk/" />
  <id>/elk</id>
  <updated>2015-03-08T00:00:00-00:00</updated>
  <published>2014-09-28T00:00:00+02:00</published>
  
  <author>
    <name>Carlos Spitzer</name>
    <uri></uri>
    <email>me@carlos-spitzer.com</email>
  </author>
  <content type="html">
    &lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#how-elk-works&quot; id=&quot;markdown-toc-how-elk-works&quot;&gt;How ELK works?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installing-and-configuring-our-first-elk-environment&quot; id=&quot;markdown-toc-installing-and-configuring-our-first-elk-environment&quot;&gt;Installing and configuring our first ELK environment&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#installing-and-configuring-elasticsearch&quot; id=&quot;markdown-toc-installing-and-configuring-elasticsearch&quot;&gt;Installing and configuring Elasticsearch&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#installing-and-configuring-kibana&quot; id=&quot;markdown-toc-installing-and-configuring-kibana&quot;&gt;Installing and configuring Kibana&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#installing-and-configuring-logstash&quot; id=&quot;markdown-toc-installing-and-configuring-logstash&quot;&gt;Installing and configuring Logstash&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#install-and-configure-logstash-forwarder-on-your-hostsclients&quot; id=&quot;markdown-toc-install-and-configure-logstash-forwarder-on-your-hostsclients&quot;&gt;Install and configure logstash-forwarder on your hosts/clients&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#are-you-a-jboss-eap-admin&quot; id=&quot;markdown-toc-are-you-a-jboss-eap-admin&quot;&gt;Are you a JBoss EAP admin?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#deep-dive&quot; id=&quot;markdown-toc-deep-dive&quot;&gt;Deep dive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;p&gt;A few months ago I started to play with ELK deployments (&lt;a href=&quot;http://www.elasticsearch.com/products/elasticsearch/&quot; target=&quot;_blank&quot;&gt;Elasticsearch&lt;/a&gt; + &lt;a href=&quot;http://www.elasticsearch.org/overview/logstash/&quot; target=&quot;_blank&quot;&gt;Logstash&lt;/a&gt; + &lt;a href=&quot;http://www.elasticsearch.org/overview/kibana/&quot; target=&quot;_blank&quot;&gt;Kibana&lt;/a&gt;) and I wrote a series of posts where I explained how to build an RPM package for elasticsearch and logstash, install and configure Kibana and how to redirect logs to be processed by logstash filters, exploited by elasticsearch and presented on Kibana web interface.&lt;/p&gt;

&lt;p&gt;Today, ELK ecosystem has improved a lot and when I mean a lot is a LOT. Probably this project is starting to be ‘a must’ for any company or customer who wants to centralize and exploit their logs, for example grouping, analyzing and creating business rules with them. I have no doubt that this can be consider an standard for interpreting and centralize logs.&lt;/p&gt;

&lt;p&gt;To get introduced with this technology, I suggest you to take a deep look to the project website to understand what ELK is and how it works. You can watch the next video to get some feedback:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/afePnzpB1F4&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;how-elk-works&quot;&gt;How ELK works?&lt;/h2&gt;
&lt;p&gt;The following diagram shows how this ecosystem works:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&quot;/images/elk-flow.jpg&quot; /&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;The logstash-forwarder reads as many local log files as you want to configure for and send them to the logstash server (port 5000) encrypted, using the logstash certification file.&lt;/li&gt;
  &lt;li&gt;The logstash server receives the logs and process the different queues to store the data in the local folders.&lt;/li&gt;
  &lt;li&gt;Elasticsearch performs different operations (optimize the data structures, create search indexes, group information…) to create a better experience accessing to the information.&lt;/li&gt;
  &lt;li&gt;Kibana reads logstash data structures and present them to the users using custom layouts, dashboards and filters.
This is pretty much how these different OpenSource projects work together. Of course, this is a very high-level diagram and there is a huge world on each project. In this post we are going to see how to install and configure a single RHEL 7 ELK server to centralize and exploit our logs and how to prepare the log-clients to use logstash-forwarder to send the logs to the ELK server.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr align=&quot;center&quot; noshade=&quot;noshade&quot; size=&quot;2&quot; width=&quot;100%&quot; /&gt;

&lt;h2 id=&quot;installing-and-configuring-our-first-elk-environment&quot;&gt;Installing and configuring our first ELK environment&lt;/h2&gt;
&lt;p&gt;### Preparing stuff
I’ve chosen &lt;a href=&quot;http://www.redhat.com/es/technologies/linux-platforms/enterprise-linux&quot; target=&quot;_blank&quot;&gt;Red Hat Enterprise Linux 7&lt;/a&gt; because it would probably be the standard enterprise linux distribution for the next 5-7 years. Of course, you can perform the same actions using CentOS or Fedora 20 releases.&lt;/p&gt;

&lt;p&gt;In my case, I have a minimal installation of RHEL7, subscribed to the following repositories (I use &lt;a href=&quot;https://access.redhat.com/products/red-hat-satellite&quot; target=&quot;_blank&quot;&gt;Red Hat Satellite 6&lt;/a&gt; as deployment, software and configuration management tool):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum repolist
Loaded plugins: package_upload, product-id, subscription-manager
repo id                                               repo name                                                              status
rhel-7-server-rh-common-rpms/x86_64                   Red Hat Enterprise Linux &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; Server - RH Common &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RPMs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                      68
rhel-7-server-rpms/x86_64                             Red Hat Enterprise Linux &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; Server &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RPMs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                               4.817
repolist: 4.885&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And firewalld and SELinux enabled by default:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd --list-all
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default, active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  interfaces: eth0
  sources: 
  services: dhcpv6-client ssh
  ports:
  masquerade: no
  forward-ports: 
  icmp-blocks: 
  rich rules:
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sestatus
SELinux status:                 enabled
SELinuxfs mount:                /sys/fs/selinux
SELinux root directory:         /etc/selinux
Loaded policy name:             targeted
Current mode:                   enforcing
Mode from config file:          enforcing
Policy MLS status:              enabled
Policy deny_unknown status:     allowed
Max kernel policy version:      28&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You must install java-openjdk-7, Apache web server and SELinux policy core-utils (this one if you want to keep SELinux enabled, because you will need to restore contexts in future steps):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum install -y java-1.7.0-openjdk httpd policycoreutils-python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also, you may want to open firewalld ports if you want to securize your server:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd --add-service&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http --permanent
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd --permanent --add-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9200/tcp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd --permanent --add-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5000/tcp 
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd --reload
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;firewall-cmd --list-all
public &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default, active&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  interfaces: eth0
  sources: 
  services: dhcpv6-client http ssh
  ports: 9200/tcp 5000/tcp
  masquerade: no
  forward-ports: 
  icmp-blocks: 
  rich rules:&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;installing-and-configuring-elasticsearch&quot;&gt;Installing and configuring Elasticsearch&lt;/h3&gt;
&lt;p&gt;First task is to create the elasticsearch repo in your server to point to the official Elasticsearch distribution:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rpm --import http://packages.elasticsearch.org/GPG-KEY-elasticsearch
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt; /etc/yum.repos.d/elasticsearch.repo &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;[elasticsearch-1.3]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;name=Elasticsearch repository for 1.3.x packages&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;baseurl=http://packages.elasticsearch.org/elasticsearch/1.3/centos&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;gpgcheck=1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;gpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;enabled=1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, install the software:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum install -y elasticsearch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And perform a minimal configuration:
* Disabling dynamic scripts:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt;&amp;gt; /etc/elasticsearch/elasticsearch.yml &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;script.disable_dynamic: true&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Restricting external access: to do it, please look for the property ‘network:hosts:‘, uncomment it and give it the value of ‘localhost‘.&lt;/li&gt;
  &lt;li&gt;Disable multicast: Find ‘discovery.ze.ping.multicast.enabled: false‘ and uncomment it.
Finally, configure systemd to start the daemon at boot time and start the service:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl daemon-reload
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;elasticsearch.service
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl start elasticsearch.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: This is a default installation. To look for default directories, please refer to this &lt;a href=&quot;http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/setup-dir-layout.html&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;.
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;installing-and-configuring-kibana&quot;&gt;Installing and configuring Kibana&lt;/h3&gt;
&lt;p&gt;Kibana hasn’t got a repository or RPM available, but we can download it executing the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -P /tmp/ https://download.elasticsearch.org/kibana/kibana/kibana-3.1.0.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar xvf /tmp/kibana-3.1.0.tar.gz&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; rm -f /tmp/kibana-3.1.0.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, edit ‘kibana-3.1.0/config.js‘ config file, find the line that specifies the elasticsearch server URL and replace the port number 9200 with 80:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;elasticsearch: &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://&amp;quot;&lt;/span&gt;+window.location.hostname+&lt;span class=&quot;s2&quot;&gt;&amp;quot;:80&amp;quot;&lt;/span&gt;,&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Move the entire directory to /var/www/html/ location and fix SElinux context:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv kibana-3.1.0/ /var/www/html/kibana3
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;restorecon -R /var/www/html/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create the apache VirtualHost configuration file for kibana3 service:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;VirtualHost&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;elk-rhel7.example.com:80&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  ServerName elk-rhel7.example.com

  DocumentRoot /var/www/html/kibana3
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;/var/www/html/kibana3&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    Allow from all
    Options -Multiviews
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;

  LogLevel debug
  ErrorLog /var/log/httpd/error_log
  CustomLog /var/log/httpd/access_log combined

  # Set global proxy timeouts
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Proxy&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;http://127.0.0.1:9200&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ProxySet connectiontimeout=5 timeout=90
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Proxy&amp;gt;&lt;/span&gt;

  # Proxy for _aliases and .*/_search
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocationMatch&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;quot;^/(_nodes|_aliases|.*/_aliases|_search|.*/_search|_mapping|.*/_mapping)$&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ProxyPassMatch http://127.0.0.1:9200/$1
    ProxyPassReverse http://127.0.0.1:9200/$1
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocationMatch&amp;gt;&lt;/span&gt;

  # Proxy for kibana-int/{dashboard,temp} stuff (if you don&amp;#39;t want auth on /, then you will want these to be protected)
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;LocationMatch&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;quot;^/(kibana-int/dashboard/|kibana-int/temp)(.*)$&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    ProxyPassMatch http://127.0.0.1:9200/$1$2
    ProxyPassReverse http://127.0.0.1:9200/$1$2
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/LocationMatch&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    AuthType Basic
    AuthBasicProvider file
    AuthName &amp;quot;Restricted&amp;quot;
    AuthUserFile /etc/httpd/conf.d/kibana-htpasswd
    Require valid-user
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/Location&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please note that my ELK server is ‘elk-rhel7.example.com‘ and the root-directory is ‘/var/www/html/kibana3‘. put your own requirements as your convenience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Move the VirtualHost configuration file to the Apache configuration folder (and fix SElinux labels):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;$ mv kibana3.conf /etc/httpd/conf.d/
$ restorecon -R /etc/httpd/conf.d/
$ semanage port -a -t http_port_t -p tcp 9200&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In you want to protect Kibana from unauthorized access, add an htpasswd entry for your user (for example ‘admin’):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;$ htpasswd -c /etc/httpd/conf.d/kibana-htpasswd admin
New password: 
Re-type new password: 
Adding password for user admin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally, enable the service at boot time and start it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;$ systemctl start httpd; systemctl status httpd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;installing-and-configuring-logstash&quot;&gt;Installing and configuring Logstash&lt;/h3&gt;

&lt;p&gt;The last step is to install and configure logstash, the responsible to receive and process log traces.
First, create the repo file to get access to the latest logstash version:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt; /etc/yum.repos.d/logstash.repo &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;[logstash-1.4]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;name=logstash repository for 1.4.x packages&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;baseurl=http://packages.elasticsearch.org/logstash/1.4/centos&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;gpgcheck=1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;gpgkey=http://packages.elasticsearch.org/GPG-KEY-elasticsearch&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;enabled=1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and install it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum install -y logstash&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since we are going to use Logstash Forwarder to ship logs from our Servers to our Logstash Server, we need to create an SSL certificate and key pair. The certificate is used by the Logstash Forwarder to verify the identity of Logstash Server.
Generate the SSL certificate and private key, in the appropriate locations (/etc/pki/tls/…), with the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/pki/tls
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo openssl req -x509 -batch -nodes -days &lt;span class=&quot;m&quot;&gt;3650&lt;/span&gt; -newkey rsa:2048 -keyout private/logstash-forwarder.key -out certs/logstash-forwarder.crt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;The logstash-forwarder.crt file will be copied to all of the servers that will send logs to Logstash.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Make the certificate available via http (to be downloaded by other potential hosts that are going to install logstash forwarder):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir /var/www/html/kibana3/pub
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp /etc/pki/tls/certs/logstash-forwarder.crt /var/www/html/kibana3/pub/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;restorecon -R /var/www/html/kibana3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;From now on, the certificate will be available for every client at: http://elk-rhel7.example.com/pub/logstash-forwarder.crt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create the configuration file for lumberjack protocol (which is used by Logstash forwarders):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt; /etc/logstash/conf.d/01-lumberjack-input.conf &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;input {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  lumberjack {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    port =&amp;gt; 5000&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    type =&amp;gt; &amp;quot;logs&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    ssl_certificate =&amp;gt; &amp;quot;/etc/pki/tls/certs/logstash-forwarder.crt&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    ssl_key =&amp;gt; &amp;quot;/etc/pki/tls/private/logstash-forwarder.key&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This configuration file specifies a lumberjack input that will listen on tcp port 5000, and it will use the SSL certificate and private key that we created earlier.
Now let’s create a configuration file called 10-syslog.conf, where we will add a filter for syslog messages:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt; /etc/logstash/conf.d/10-syslog.conf &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;filter {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  if [type] == &amp;quot;syslog&amp;quot; {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    grok {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      match =&amp;gt; { &amp;quot;message&amp;quot; =&amp;gt; &amp;quot;%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}&amp;quot; }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      add_field =&amp;gt; [ &amp;quot;received_at&amp;quot;, &amp;quot;%{@timestamp}&amp;quot; ]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      add_field =&amp;gt; [ &amp;quot;received_from&amp;quot;, &amp;quot;%{host}&amp;quot; ]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    syslog_pri { }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    date {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      match =&amp;gt; [ &amp;quot;syslog_timestamp&amp;quot;, &amp;quot;MMM  d HH:mm:ss&amp;quot;, &amp;quot;MMM dd HH:mm:ss&amp;quot; ]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This filter looks for logs that are labeled as “syslog” type (by a logstash-forwarder), and it will try to use “grok” to parse incoming syslog logs to make it structured and query-able.&lt;/p&gt;

&lt;p&gt;Lastly, we will create a configuration file called 30-lumberjack-output.conf, that basically configures Logstash to store the logs in Elasticsearch:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt; /etc/logstash/conf.d/30-lumberjack-output.conf &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;output {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  elasticsearch { host =&amp;gt; localhost }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  stdout { codec =&amp;gt; rubydebug }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;One of the last steps is to restart the logstash service to apply changes (please, be aware that logstash is not systemd compliant):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chkconfig logstash on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; service logstash restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally, share the following files from your elk-server to any potential host-client in your network:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -P /var/www/html/kibana3/pub/ http://packages.elasticsearch.org/logstashforwarder/centos/logstash-forwarder-0.3.1-1.x86_64.rpm&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -P /var/www/html/kibana3/pub/ http://logstashbook.com/code/4/logstash_forwarder_redhat_init
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -P /var/www/html/kibana3/pub/ http://logstashbook.com/code/4/logstash_forwarder_redhat_sysconfig
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;restorecon -R /var/www/html/kibana3/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where:
* logstash-forwarder-0.3.1-1.x86_64.rpm: Package for logstash-forwarder agent.
* logstash_forwarder_redhat_init: Example of init.d script for logstash-forwarder.
* logstash_forwarder_redhat_sysconfig: Config file for logstash-forwarder.
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;install-and-configure-logstash-forwarder-on-your-hostsclients&quot;&gt;Install and configure logstash-forwarder on your hosts/clients&lt;/h3&gt;
&lt;p&gt;The main reason to share the files described above is to easily perform the following steps.
First, you must install Logstash Forwarder package:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -P /tmp/ --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;user&amp;gt; --password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;pass&amp;gt; http://elk-rhel7.example.com/pub/logstash-forwarder-0.3.1-1.x86_64.rpm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum localinstall /tmp/logstash-forwarder-0.3.1-1.x86_64.rpm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -f /tmp/logstash-forwarder-0.3.1-1.x86_64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, download the logstash-forwarder init script and config file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -O /etc/init.d/logstash-forwarder --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;user&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; --password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;pass&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; http://elk-rhel7.example.com/pub/logstash_forwarder_redhat_init
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chmod +x /etc/init.d/logstash-forwarder
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -O /etc/sysconfig/logstash-forwarder --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;user&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; --password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;pass&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; http://elk-rhel7.example.com/pub/logstash_forwarder_redhat_sysconfig&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Copy the SSL certificate into the appropriate location (/etc/pki/tls/certs):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget -P /etc/pki/tls/certs/ --user&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;user&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; --password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;lt;&lt;/span&gt;pass&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; http://elk-rhel7.example.com/pub/logstash-forwarder.crt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And create (or download from logstash-server at http://elk-rhel7.example.com/pub/logstash-forwarder) the logstash-forwarder config file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir -P /etc/logstash-forwarder
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cat &amp;gt; /etc/logstash-forwarder/logstash-forwarder.conf &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  &amp;quot;network&amp;quot;: {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;servers&amp;quot;: [ &amp;quot;192.168.100.10:5000&amp;quot; ],&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;timeout&amp;quot;: 15,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    &amp;quot;ssl ca&amp;quot;: &amp;quot;/etc/pki/tls/certs/logstash-forwarder.crt&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  },&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  &amp;quot;files&amp;quot;: [&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    {&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;paths&amp;quot;: [&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        &amp;quot;/var/log/messages&amp;quot;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        &amp;quot;/var/log/secure&amp;quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;       ],&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      &amp;quot;fields&amp;quot;: { &amp;quot;type&amp;quot;: &amp;quot;syslog&amp;quot; }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    }&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;   ]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;EOF&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;The internal IP-Address of my logstash-server is 192.168.100.10.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This configures Logstash Forwarder to connect to your Logstash Server on port 5000 (the port that we specified an input for earlier), and uses the SSL certificate that we created earlier.
The paths section specifies which log files to send (here we specify messages and secure), and the type section specifies that these logs are of type “syslog* (which is the type that our filter is looking for).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is where you would add more files/types to configure Logstash Forwarder to other log files to Logstash on port 5000.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, lets activate Logstash-Forwarder on boot and start the service:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chkconfig --add logstash-forwarder
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;service logstash-forwarder start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should see now that log events are forwarded to your elk-server accessing to the Kibana Dashboard (in my case):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;http://elk-rhel7.example.com/index.html#/dashboard/file/logstash.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;&lt;img src=&quot;/images/elk-pic1.jpg&quot; /&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;are-you-a-jboss-eap-admin&quot;&gt;Are you a JBoss EAP admin?&lt;/h2&gt;
&lt;p&gt;Maybe your are interested on centralize JBoss EAP log files and metrics. If so, please check &lt;a href=&quot;https://plus.google.com/+JochenCordes&quot; target=&quot;_blank&quot;&gt;Jochen Cordes&lt;/a&gt; Blog’s &lt;a href=&quot;http://jcordes73.blogspot.com.es/2014/11/using-elks-jmx-plugin-to-gather-jboss.html&quot; target=&quot;_blank&quot;&gt;post&lt;/a&gt; where you can find useful information about it.
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;deep-dive&quot;&gt;Deep dive&lt;/h2&gt;

&lt;p class=&quot;notice&quot;&gt;If you want to go further, I suggest you to go to the &lt;a href=&quot;http://www.elasticsearch.org/resources/&quot; target=&quot;_blank&quot;&gt;Elasticsearch Resources&lt;/a&gt; page and regist to one of the scheduled &lt;a href=&quot;http://purchases.elasticsearch.com/&quot; target=&quot;_blank&quot;&gt;trainings&lt;/a&gt; on your hometown or next to it. For example: &lt;a href=&quot;https://purchases.elasticsearch.com/static/pdf/Elasticsearch-Core-Outline.pdf&quot; target=&quot;_blank&quot;&gt;Elasticsearch Core Outline&lt;/a&gt; or &lt;a href=&quot;https://purchases.elasticsearch.com/static/pdf/Workshop-Outline.pdf&quot; target=&quot;_blank&quot;&gt;Getting started workshop&lt;/a&gt;.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;There is a nice O’Reilly book just to be released: &lt;a href=&quot;http://www.elasticsearch.org/blog/elasticsearch-definitive-guide/&quot; target=&quot;_blank&quot;&gt;Elasticsearch: The Definitive Guide.&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/elk/&quot;&gt;Improving log-analysis capabilities with logstash + elasticsearch + kibana&lt;/a&gt; was originally published by Carlos Spitzer at &lt;a href=&quot;&quot;&gt;Carlos Spitzer's Blog&lt;/a&gt; on September 28, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Creating your own cloud using Fedora and ownCloud]]></title>
  <link rel="alternate" type="text/html" href="/owncloud/" />
  <id>/owncloud</id>
  <updated>2015-03-08T00:00:00-00:00</updated>
  <published>2014-08-24T00:00:00+02:00</published>
  
  <author>
    <name>Carlos Spitzer</name>
    <uri></uri>
    <email>me@carlos-spitzer.com</email>
  </author>
  <content type="html">
    &lt;section id=&quot;table-of-contents&quot; class=&quot;toc&quot;&gt;
  &lt;header&gt;
    &lt;h3&gt;Overview&lt;/h3&gt;
  &lt;/header&gt;
&lt;div id=&quot;drawer&quot;&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-owncloud&quot; id=&quot;markdown-toc-what-is-owncloud&quot;&gt;What is ownCloud&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation-and-configuration&quot; id=&quot;markdown-toc-installation-and-configuration&quot;&gt;Installation and configuration&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#installing-owncloud-7&quot; id=&quot;markdown-toc-installing-owncloud-7&quot;&gt; Installing ownCloud 7&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#configuring-and-managing-owncloud&quot; id=&quot;markdown-toc-configuring-and-managing-owncloud&quot;&gt; Configuring and managing ownCloud&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#user-management&quot; id=&quot;markdown-toc-user-management&quot;&gt;User management&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#use-your-external-storage-to-store-data-instead-of-internal-hard-disk&quot; id=&quot;markdown-toc-use-your-external-storage-to-store-data-instead-of-internal-hard-disk&quot;&gt;Use your external storage to store data (instead of internal hard disk)&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#smartphone-and-pc-client-integration-or-how-to-explain-to-your-users-how-to-manage-their-owncloud-services&quot; id=&quot;markdown-toc-smartphone-and-pc-client-integration-or-how-to-explain-to-your-users-how-to-manage-their-owncloud-services&quot;&gt;Smartphone and PC client integration or “How to explain to your users how to manage their ownCloud services”&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#backup-your-platform&quot; id=&quot;markdown-toc-backup-your-platform&quot;&gt;Backup your platform&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

  &lt;/div&gt;
&lt;/section&gt;
&lt;!-- /#table-of-contents --&gt;

&lt;p&gt;A few weeks ago I was wondering what additional service I could provide to my family using my Intel NUC D34010WYK in order to centralize cloud storage and avoid using commercial cloud-based solutions: Google Drive, OneDrive, Dropbox…
Every one is expensive and I’m not really sure if my personal data could not be analyzed by “men in black”, you know. Also, if I can manage my own cloud service I could provide storage, contact management, online file edition, centralized calendar, platform user management and a lot more storage space available (as many GiB as my USB 3.0 external disk has available). Moreover, all of this for free and using OpenSource technologies.&lt;/p&gt;

&lt;p&gt;What do I mean about “OpenSource Infrastructure Cloud Storage” solution? OK, it simple: a piece of OpenSource software that you can install on your computer providing cloud storage management. The software is entirely administred by you, and you are the only responsible for its availability.
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-owncloud&quot;&gt;What is ownCloud&lt;/h2&gt;
&lt;p&gt;The best way to know the features of ownCloud 7 is to review the official video-review:&lt;/p&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/xA3tfBTvH0c&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In this post I’m going to explain how to install and configure your ownCloud infrastructure, providing the following services to any user that could want to use your platform (for example, your family):
* 10 GiB free space for every user account (expandable if you want).
* Centralize contacts and calendar, providing smartphone and cloud integration.
* Online “open format” files edition (odt, odp, ods).
Remember, all of this for free.
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;installation-and-configuration&quot;&gt;Installation and configuration&lt;/h2&gt;

&lt;h3 id=&quot;installing-owncloud-7&quot;&gt; Installing ownCloud 7&lt;/h3&gt;
&lt;p&gt;I suggest to follow the &lt;a href=&quot;http://doc.owncloud.org/server/7.0/admin_manual/&quot; target=&quot;_blank&quot;&gt;ownCloud Administration Guide&lt;/a&gt; to understand the installation &amp;amp; configuration steps.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I’m going to explain how to install ownCloud on Fedora 20. For other OS you can follow similar steps, but you should refer to official ownCloud Administration Guide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, you need to create the repository in order to receive future updates:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/yum.repos.d/
wget http://download.opensuse.org/repositories/isv:ownCloud:community/Fedora_20/isv:ownCloud:community.repo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;At the time I’m writing this post, ownCloud needs to have SElinux disabled in order to work properly. Please, be aware if you want to preserve your current SElinux activated, you may find some troubles during installation or configuration phase.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then, install it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install owncloud&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, we can follow the &lt;a href=&quot;http://doc.owncloud.org/server/7.0/admin_manual/installation/installation_wizard.html&quot; target=&quot;_blank&quot;&gt;Installation Wizard&lt;/a&gt; to assist us during this phase.&lt;/p&gt;

&lt;p&gt;If you access to http://&amp;lt;your_hostname&amp;gt;/owncloudyou and press “Advanced” dropdown menu, you may see the followin screen:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&quot;/images/owncloud-pic1.jpg&quot; /&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you want to use HTTPs, please, follow this post in order to create SSL certificates and configure the Apache service to use them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First you can customize the local Data forlder to use. I suggest you to keep this unchanged and then redirect local user folders to your external hard disk or NAS using symbolic links.
Then, you must select the administrator username and password and which database provided you prefer to use:
* Internal SQLite database: for small/medium purposes.
* MySQL local or external database: for medium/high workloads. If you choose this one, you must provide the mySQL connection settings in order to finish the installation.&lt;/p&gt;

&lt;p&gt;In my case, I use SQLite because I’m going to serve to no more than 5-6 users and my Intel NUC is not a powerfull machine to run MySQL, PLEX media server and bit-torrent client at the same time :-)&lt;/p&gt;

&lt;p&gt;Once you’ve entered all settings, press “Finish Setup” (ownCloud will set up your cloud according to the given settings). When its finished, it will log you in as administrative user and present the “Welcome to ownCloud” screen.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you found the following error message when you access the Welcome page:
“Your web server is not yet properly setup to allow files synchronization because the WebDAV interface seems to be broken. Please double check the installation guides.”
Please refer to this &lt;a href=&quot;http://forum.owncloud.org/viewtopic.php?f=17&amp;amp;t=7536&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt; in order to fix it.
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;configuring-and-managing-owncloud&quot;&gt; Configuring and managing ownCloud&lt;/h3&gt;
&lt;p&gt;Now you have installed the ownCloud platform, you should refer to the Configuration and Management documentation in order to learn and understand how many options are available for you and your purposes.&lt;/p&gt;

&lt;p&gt;Here, I’m going to explain how to create one “test” account, give it 10 GiB of disk quota and how to centralize contacts and calendar management using a smartphone (Android, iOS, etc..).
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;user-management&quot;&gt;User management&lt;/h4&gt;
&lt;p&gt;A user represents an account of the ownCloud installation. The main fields for this entity are the following:
* Login name (Username): This is the unique ID of a ownCloud user (e.g. test, jon.doe).
* Full Name: This is the name that is used all over the user interface to identify the user i.e. when sharing data or sending mails. If no display name is set, it defaults to the login name.
* Password: This is the password the user uses to login to ownCloud.
* Groups: This is a list of security groups the user is assigned to. By default the user is not member of any user group.
* Group Admin: This is a list of security groups the user has administration privileges for. By default the user is not registered as group admin for any user group.
* Quota: This is the maximum disk space that may be used by the user. If the user reaches this limit he/she is not able to upload or sync further data. The storage quota is specified in the format Number Unit (e.g. 100 B (byte), 50 KB (kilobyte), 20 MB (megabyte), 5 GB (gigabyte)). If no unit is given, the number is interpreted as bytes.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&quot;/images/owncloud-pic2.jpg&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;To create a new user account, follow these steps:
1. Enter the new user’s Login Name and its initial Password in the appropriate fields (I create a ‘test’ user).
2. (Optional) Select the Groups to which you want to assign the new user.
3. Click Create.
4. (Optional) Edit additional user settings. To set other user settings, such as setting a display name or limiting the user’s storage, please, refer to this &lt;a href=&quot;http://doc.owncloud.org/server/7.0/admin_manual/configuration/configuration_users.html&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;. Created users will have the storage specified on Default Storage setting on the same page (located right-below the screen, on the gear icon). You can change it, for example to 10 GiB.
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;use-your-external-storage-to-store-data-instead-of-internal-hard-disk&quot;&gt;Use your external storage to store data (instead of internal hard disk)&lt;/h4&gt;
&lt;p&gt;It’s recommended to use external storage (usb 3.0 or NAS) to store your data (and provide more available space for your users). To use it, the easiest way is to create a symbolic link to point to the user folder located on your external disk or NAS.&lt;/p&gt;

&lt;p&gt;But first, after create the new user ‘test’, if you open a shell session on your machine, you will see a new folder has been created:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# ll /var/www/html/owncloud/data&lt;/span&gt;
...
-rwxrwx--- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache         &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt; 23:08 index.html
-rwxrwx--- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache &lt;span class=&quot;m&quot;&gt;114422784&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; 11:50 owncloud.db
-rw-r----- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache   &lt;span class=&quot;m&quot;&gt;3715824&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; 17:56 owncloud.log
lrwxrwxrwx &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache        &lt;span class=&quot;m&quot;&gt;29&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; 12:40 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we want to redirect the user data to an external storage (usb hard disk or NAS), first we must sync all info stored in the owncloud user folder to the new one on external storage (in my case, mounted on /media/MEDIA/ownCloud directory):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# mkdir /media/MEDIA/ownCloud/test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# rsync -Pav /var/www/html/owncloud/data/test/* /media/MEDIA/ownCloud/test/&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# rm -rf /var/www/html/owncloud/data/test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then, we can create a symbolic link to this new folder:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# ln -s /media/MEDIA/ownCloud/test /var/www/html/owncloud/data/test&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# ll /var/www/html/owncloud/data&lt;/span&gt;
total 115384
-rwxrwx--- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache         &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt; 23:08 index.html
-rwxrwx--- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache &lt;span class=&quot;m&quot;&gt;114422784&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;24&lt;/span&gt; 11:50 owncloud.db
-rw-r----- &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache   &lt;span class=&quot;m&quot;&gt;3715824&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;23&lt;/span&gt; 17:56 owncloud.log
lrwxrwxrwx &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; apache apache        &lt;span class=&quot;m&quot;&gt;29&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; 12:40 &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; -&amp;gt; /media/MEDIA/ownCloud/test&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, you have the current user data stored using the external device.
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;smartphone-and-pc-client-integration-or-how-to-explain-to-your-users-how-to-manage-their-owncloud-services&quot;&gt;Smartphone and PC client integration or “How to explain to your users how to manage their ownCloud services”&lt;/h4&gt;
&lt;p&gt;This is the hardest part of the job: explain to your users (family and potential non-technical users) how to manage this new account and services. OwnCloud has a very good &lt;a href=&quot;http://doc.owncloud.org/server/7.0/user_manual/&quot; target=&quot;_blank&quot;&gt;start-point guide&lt;/a&gt; that you can share with your users. Instead of write how to do it, it’s better to follow the latest updated ownCloud guide. I wish you luck!! XD
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;backup-your-platform&quot;&gt;Backup your platform&lt;/h3&gt;
&lt;p&gt;In order to make a daily/weekly/monthly backup of your ownCloud configuration, you can use the following script and configure cron to call it using your desired frequency:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@home:~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# ll backup.sh &lt;/span&gt;
-rwx------ &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; root root &lt;span class=&quot;m&quot;&gt;1095&lt;/span&gt; Aug &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt; 19:12 backup.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
 
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /media/MEDIA/ownCloud/lestrade84/files/Proyectos/OpenShift
 
&lt;span class=&quot;c&quot;&gt;# Backup ownCloud site&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /media/MEDIA/ownCloud/admin/files/ownCloud
tar -zcvf ./owncloud-dirbkp_&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;s2&quot;&gt;&amp;quot;%Y%m%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;.tar.gz  /var/www/html/owncloud
cp owncloud-dirbkp_&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;s2&quot;&gt;&amp;quot;%Y%m%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;.tar.gz /root/backup/ownCloud/
sqlite3 /var/www/html/owncloud/data/owncloud.db .dump &amp;gt; ./owncloud-sqlbkp_&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;s2&quot;&gt;&amp;quot;%Y%m%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;.bak
cp owncloud-sqlbkp_&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +&lt;span class=&quot;s2&quot;&gt;&amp;quot;%Y%m%d&amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;.bak /root/backup/ownCloud/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I call it every sunday using cron, so I save a weekly-backup copy for configuration and database dump on my external device and intel-nuc’s local directory /root/backup. Also, I use Fedora 20 &lt;a href=&quot;http://fedoraproject.org/wiki/Features/OwnCloud&quot; target=&quot;_blank&quot;&gt;ownCloud client&lt;/a&gt; integration, so every week the client automatically download the latest backup file generated (so I have 3 different copies of this data for security and availability reasons).&lt;/p&gt;

&lt;p&gt;You can use the scheme which best fit your purposes.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/owncloud/&quot;&gt;Creating your own cloud using Fedora and ownCloud&lt;/a&gt; was originally published by Carlos Spitzer at &lt;a href=&quot;&quot;&gt;Carlos Spitzer's Blog&lt;/a&gt; on August 24, 2014.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[How to flash Motorola Moto G (factory image)]]></title>
  <link rel="alternate" type="text/html" href="/motog/" />
  <id>/motog</id>
  <updated>2015-03-08T00:00:00-00:00</updated>
  <published>2014-04-12T00:00:00+02:00</published>
  
  <author>
    <name>Carlos Spitzer</name>
    <uri></uri>
    <email>me@carlos-spitzer.com</email>
  </author>
  <content type="html">
    &lt;p&gt;Recently I was “unbricking” my brother in law moto G device.
I wondered how to recover the Moto G factory stock image and I found several posts with partial information. So I decided to publish one with the entire stock information :-)&lt;/p&gt;

&lt;p&gt;First you should find out which device version you have and download the right &lt;a href=&quot;http://www.filefactory.com/folder/c6cdedc45a775d27&quot; target=&quot;_blank&quot;&gt;stock ROM&lt;/a&gt;
Also, you should have the fastboot application installed on your linux OS. How to do it? Installing “android-tools” package, easy:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; yum info android-tools
Loaded plugins: langpacks, refresh-packagekit
Installed Packages
Name : android-tools
Arch : x86_64
Version : 20130123git98d0789
Release : 2.fc20
Size : &lt;span class=&quot;m&quot;&gt;297&lt;/span&gt; k
Repo : installed
From repo : fedora
Summary : Android platform tools&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;adb, fastboot&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
URL : http://developer.android.com/guide/developing/tools/
License : ASL 2.0 and &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ASL 2.0 and BSD&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Description :
: The Android Debug Bridge &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ADB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is used to:
:
: - keep track of all Android devices and emulators instances
: connected to or running on a given host developer machine
:
: - implement various control commands &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;e.g. &lt;span class=&quot;s2&quot;&gt;&amp;quot;adb shell&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;adb pull&amp;quot;&lt;/span&gt;, etc.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
: &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the benefit of clients &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;-line users, or helper programs like
: DDMS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;. These commands are what is called a &lt;span class=&quot;s1&quot;&gt;&amp;#39;service&amp;#39;&lt;/span&gt; in ADB.
:
: Fastboot is used to manipulate the flash partitions of the Android phone.
: It can also boot the phone using a kernel image or root filesystem image
: which reside on the host machine rather than in the phone flash.
: In order to use it, it is important to understand the flash partition
: layout &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the phone.
: The fastboot program works in conjunction with firmware on the phone
: to &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;and write the flash partitions. It needs the same USB device
: setup between the host and the target phone as adb.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then, you must put the following script in the same un-zip’ed stock image folder:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Author: Carlos Spitzer (me@carlos-spitzer.com)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# First you must download Stock images here: http://www.filefactory.com/folder/c6cdedc45a775d27&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Repartitioning...&amp;quot;&lt;/span&gt;
fastboot flash partition gpt.bin
fastboot flash motoboot motoboot.img
fastboot flash logo logo.bin
fastboot flash boot boot.img
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Installing recovery...&amp;quot;&lt;/span&gt;
fastboot flash recovery recovery.img
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Formating....&amp;quot;&lt;/span&gt;
fastboot flash system system.img_sparsechunk.0
fastboot flash system system.img_sparsechunk.1
fastboot flash system system.img_sparsechunk.2
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Flashing modem....&amp;quot;&lt;/span&gt;
fastboot flash modem NON-HLOS.bin
fastboot erase modemst1
fastboot erase modemst2
fastboot flash fsg fsg.mbn
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Erasing cache &amp;amp; user data....&amp;quot;&lt;/span&gt;
fastboot erase cache
fastboot erase userdata
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt;
fastboot reboot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, execute it and let the magic flows…&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/motog/&quot;&gt;How to flash Motorola Moto G (factory image)&lt;/a&gt; was originally published by Carlos Spitzer at &lt;a href=&quot;&quot;&gt;Carlos Spitzer's Blog&lt;/a&gt; on April 12, 2014.&lt;/p&gt;
  </content>
</entry>

</feed>
